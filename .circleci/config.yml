version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

commands:
# Add a npm install and cd command so I don't have it 100 times thorugh the code
  npm-install:
    parameters:
      end:
        type: string
    steps:
      - run: 
          name: Install << parameters.end >> dependencies
          command: |
            cd << parameters.end >>
            npm i

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  build-frontend:
    docker:
      - image: circleci/node
    working_directory: ~/frontend
    steps:
      - checkout
      - npm-install:
          end: frontend
      - run: 
          name: Building Frontend
          command: | 
            cd frontend && npm run build


  build-backend:
    docker:
      - image: circleci/node
    working_directory: ~/backend
    steps:
      - checkout
      - run: cd backend && npm run build


  test-frontend:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - npm-install:
          end: "frontend"
      - run:
          # name: Test Frontend
          command: |
            cd frontend
            mkdir -p ./reports/junit/
            npm install --save-dev jest-junit jest-junit-reporter
            ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "./reports/junit/"
      - store_test_results:
          path: ./frontend/reports/junit/

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    working_directory: ~/backend/test
    steps:
      - checkout
      - run: cd backend && npm install
      - run: cd backend && npm run test
      - run: cd backend && npm run test:e2e
      - run: cd backend && npm run test:cov


#  scan-frontend:

#  scan-backend:

#  deploy-infrastructure:

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  Build:
    jobs:
      - build-frontend
      - build-backend
  Test:
    jobs:
      - test-frontend
      # - test-backend
